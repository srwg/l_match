import 'dart:math';

import 'constants.dart';
import 'block.dart';

/** Compute the board for a rectangular board */
BigInt buildRectangularGameBoard() {
  var board = BigInt.from((1 << BOARD_W) - 1);
  final row = 1 << (BOARD_W - 1);  // Bottom margin
  for (int h = 0; h < BOARD_H - 2; ++h) {
    board = (board << BOARD_W) | BigInt.from(row);
  }
  board = (board << BOARD_W) | BigInt.from((1 << BOARD_W) - 1);  // Top margin
  return board;
}

BigInt buildGamePins(List pos) {
  var board = BigInt.zero;
  var rows = List<int>();
  for (int r=0; r < BOARD_H; ++r) {
    var x = 0;
    for (var p in pos) {
      if (p[0] == r) {
        x += 1 << p[1];
      }
    }
    rows.add(x);
  }
  for (int r in rows.reversed) {
    board = (board << BOARD_W) | BigInt.from(r);
  }
  return board;
}

List<BigInt> buildGame(List<Block> blocks, List<Block> blocks_home) {
  for (int i = 0; i < blocks.length; ++i) {
    blocks_home.add(blocks[i]);
  }
  List<BigInt> boards = [];
  boards.add(buildRectangularGameBoard());
  
  var config_id = new Random().nextInt(37);

  for (var pins in GAME_PINS[config_id]) {
    var pin_b = buildGamePins(pins);
    boards[0] |= pin_b;
    boards.add(pin_b);
  }
  return boards;
}

/** Game configuration (the following is generated by running ./python/gen.py)*/
const GAME_PINS = [
[[[1, 0], [5, 1], [2, 6], [6, 6], ], [[5, 0], [6, 2], [2, 3], [3, 7], ], [[2, 2], [4, 3], [5, 4], [2, 7], ]],
[[[1, 5], [5, 3], [3, 7], [5, 0], ], [[3, 1], [3, 4], [5, 5], [6, 3], ], [[2, 1], [2, 5], [2, 2], [4, 7], ]],
[[[3, 2], [3, 0], [4, 7], [6, 7], ], [[3, 1], [3, 4], [6, 1], [5, 4], ], [[2, 4], [1, 5], [3, 3], [6, 3], ]],
[[[3, 1], [1, 6], [6, 0], [6, 6], ], [[1, 4], [3, 2], [6, 2], [5, 4], ], [[1, 3], [2, 3], [4, 6], [4, 3], ]],
[[[2, 4], [4, 2], [6, 4], [5, 6], ], [[1, 3], [3, 6], [3, 0], [5, 3], ], [[2, 1], [3, 2], [4, 6], [5, 2], ]],
[[[2, 3], [1, 4], [5, 1], [6, 6], ], [[1, 7], [3, 5], [3, 3], [4, 7], ], [[1, 0], [3, 2], [4, 4], [6, 3], ]],
[[[3, 0], [1, 4], [2, 7], [4, 2], ], [[2, 6], [4, 1], [6, 1], [6, 5], ], [[1, 3], [4, 5], [3, 3], [5, 6], ]],
[[[4, 1], [6, 1], [5, 4], [6, 5], ], [[2, 2], [3, 6], [3, 2], [4, 3], ], [[2, 1], [1, 5], [3, 7], [5, 3], ]],
[[[2, 6], [4, 6], [5, 3], [5, 5], ], [[2, 1], [1, 2], [4, 4], [6, 6], ], [[1, 4], [2, 0], [4, 2], [6, 1], ]],
[[[1, 1], [4, 6], [5, 6], [6, 0], ], [[2, 7], [5, 3], [6, 4], [5, 7], ], [[1, 3], [3, 3], [4, 4], [3, 1], ]],
[[[2, 4], [4, 7], [4, 2], [5, 7], ], [[2, 5], [2, 2], [4, 1], [6, 4], ], [[1, 0], [2, 6], [5, 0], [5, 6], ]],
[[[4, 1], [3, 7], [5, 1], [5, 5], ], [[2, 1], [1, 2], [1, 6], [3, 3], ], [[3, 1], [4, 5], [5, 6], [6, 0], ]],
[[[3, 7], [4, 5], [6, 7], [5, 0], ], [[2, 3], [3, 4], [5, 3], [5, 5], ], [[2, 1], [1, 3], [4, 0], [5, 1], ]],
[[[1, 3], [2, 5], [4, 5], [2, 6], ], [[1, 6], [3, 0], [5, 2], [6, 6], ], [[2, 0], [4, 3], [6, 0], [5, 5], ]],
[[[1, 0], [2, 2], [3, 4], [4, 5], ], [[6, 1], [4, 3], [5, 2], [6, 4], ], [[2, 7], [3, 2], [3, 6], [4, 7], ]],
[[[1, 6], [5, 0], [6, 6], [6, 3], ], [[1, 1], [4, 2], [3, 1], [6, 2], ], [[1, 3], [2, 7], [3, 3], [4, 4], ]],
[[[3, 3], [2, 5], [5, 1], [6, 2], ], [[1, 5], [4, 6], [5, 4], [6, 5], ], [[1, 1], [3, 2], [5, 7], [4, 0], ]],
[[[2, 0], [4, 5], [4, 2], [6, 7], ], [[1, 2], [2, 5], [5, 6], [5, 0], ], [[1, 1], [3, 7], [3, 3], [5, 3], ]],
[[[4, 2], [4, 6], [6, 3], [6, 5], ], [[2, 0], [2, 4], [2, 5], [5, 3], ], [[1, 7], [4, 4], [4, 5], [4, 0], ]],
[[[3, 1], [1, 2], [2, 5], [6, 1], ], [[3, 6], [4, 6], [4, 0], [6, 6], ], [[3, 4], [2, 1], [4, 3], [5, 4], ]],
[[[2, 4], [2, 6], [6, 1], [4, 7], ], [[1, 6], [5, 6], [6, 2], [6, 5], ], [[1, 1], [4, 2], [4, 3], [3, 1], ]],
[[[1, 2], [2, 6], [6, 3], [6, 4], ], [[1, 4], [3, 1], [6, 1], [6, 6], ], [[2, 2], [1, 6], [3, 3], [5, 6], ]],
[[[1, 0], [2, 4], [2, 0], [5, 3], ], [[1, 6], [4, 2], [6, 6], [5, 6], ], [[1, 2], [3, 5], [4, 6], [6, 2], ]],
[[[3, 4], [4, 6], [5, 2], [6, 5], ], [[1, 0], [1, 3], [1, 4], [2, 7], ], [[4, 2], [5, 0], [6, 1], [6, 4], ]],
[[[2, 1], [2, 6], [3, 3], [6, 4], ], [[1, 4], [1, 7], [6, 0], [6, 6], ], [[2, 3], [3, 0], [3, 7], [6, 2], ]],
[[[2, 3], [2, 7], [2, 2], [6, 3], ], [[1, 2], [4, 1], [5, 2], [6, 5], ], [[1, 4], [5, 0], [4, 5], [4, 6], ]],
[[[1, 7], [4, 0], [4, 5], [6, 1], ], [[1, 3], [3, 2], [5, 0], [6, 6], ], [[1, 0], [3, 7], [4, 2], [5, 4], ]],
[[[1, 7], [2, 0], [4, 4], [5, 4], ], [[2, 1], [3, 2], [6, 2], [5, 7], ], [[1, 2], [1, 4], [4, 7], [5, 1], ]],
[[[1, 6], [2, 4], [4, 3], [5, 7], ], [[2, 2], [4, 6], [5, 5], [6, 4], ], [[1, 1], [3, 3], [2, 7], [5, 0], ]],
[[[2, 7], [4, 5], [3, 7], [5, 4], ], [[1, 3], [2, 3], [4, 3], [6, 4], ], [[1, 0], [5, 1], [5, 0], [6, 7], ]],
[[[3, 2], [3, 7], [6, 3], [5, 7], ], [[3, 0], [1, 5], [4, 2], [3, 4], ], [[4, 6], [5, 6], [4, 0], [5, 2], ]],
[[[1, 1], [2, 2], [2, 0], [5, 7], ], [[2, 5], [3, 4], [5, 1], [6, 1], ], [[1, 7], [5, 4], [4, 4], [6, 4], ]],
[[[4, 2], [3, 2], [3, 0], [6, 1], ], [[2, 4], [3, 6], [4, 5], [4, 7], ], [[1, 0], [1, 4], [6, 3], [5, 6], ]],
[[[3, 0], [2, 2], [5, 6], [4, 4], ], [[2, 7], [3, 3], [5, 2], [6, 6], ], [[3, 1], [1, 3], [2, 6], [5, 3], ]],
[[[1, 3], [3, 3], [5, 4], [6, 5], ], [[1, 0], [3, 1], [2, 6], [6, 1], ], [[1, 5], [2, 3], [3, 5], [5, 2], ]],
[[[3, 1], [1, 7], [3, 4], [6, 2], ], [[2, 3], [3, 2], [4, 7], [6, 5], ], [[1, 3], [2, 6], [6, 4], [6, 3], ]],
[[[3, 1], [2, 6], [6, 4], [6, 7], ], [[2, 0], [3, 7], [4, 3], [6, 1], ], [[1, 3], [2, 4], [3, 5], [3, 0], ]],
];

